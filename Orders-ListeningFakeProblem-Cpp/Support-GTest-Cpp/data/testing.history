<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1245972492000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1245972620000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1245972761000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1245972828000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1245979142000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1246303498000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1246312359000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1246318048000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1246318105000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1246470796000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1246472723000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1246475942000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1246485517000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1246491220000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1246990269000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247072541000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247086486000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247089365000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247091443000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247092693000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247093612000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247094430000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247166062000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247172662000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247172683000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247172797000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247172847000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247173980000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247174668000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247174791000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247177359000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247179258000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247181165000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247182024000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247183296000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247183625000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247183665000'/>
<test count='14' failed='' failures='0' passed='Negative(FactorialTest), Zero(FactorialTest), Positive(FactorialTest), Negative(IsPrimeTest), Trivial(IsPrimeTest), Positive(IsPrimeTest), DefaultConstructor(MyString), ConstructorFromCString(MyString), CopyConstructor(MyString), Set(MyString), DefaultConstructor(QueueTest), Dequeue(QueueTest), Map(QueueTest), Increment(Counter)' stamp='1247184547000'/>
